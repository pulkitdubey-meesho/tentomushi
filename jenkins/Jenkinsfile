pipeline {
    agent any

    environment {
        IMAGE_NAME = "localhost:5000/tentomushi-frontend"
        DEPLOY_REPO = "https://github.com/pulkitdubey-meesho/tentomushi-deploy.git"
        BRANCH = "main"
    }

    stages {
        stage('Install Docker') {
            steps {
                script {
                    // Check if Docker is installed, if not install it
                    sh '''
                    if ! command -v docker &> /dev/null; then
                        echo "Docker not found, installing..."
                        
                        # Update package index
                        sudo apt-get update
                        
                        # Install packages to allow apt to use a repository over HTTPS
                        sudo apt-get install -y \
                            apt-transport-https \
                            ca-certificates \
                            curl \
                            gnupg \
                            lsb-release
                        
                        # Add Docker's official GPG key
                        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
                        
                        # Set up the stable repository
                        echo \
                          "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
                          $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
                        
                        # Install Docker Engine
                        sudo apt-get update
                        sudo apt-get install -y docker-ce docker-ce-cli containerd.io
                        
                        # Add jenkins user to docker group (if running as jenkins user)
                        sudo usermod -aG docker $USER || true
                        
                        # Start and enable Docker service
                        sudo systemctl start docker
                        sudo systemctl enable docker
                        
                        echo "Docker installed successfully"
                    else
                        echo "Docker is already installed"
                        docker --version
                    fi
                    '''
                }
            }
        }
        
        stage('Checkout') {
            steps {
                git url: 'https://github.com/pulkitdubey-meesho/tentomushi.git', branch: "${BRANCH}"
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Ensure Docker daemon is accessible
                    sh '''
                    # Test Docker access
                    docker --version
                    docker info || (echo "Docker daemon not accessible, trying with sudo..." && sudo docker info)
                    '''
                    
                    // Use sudo if regular user doesn't have Docker access
                    sh '''
                    if docker ps &> /dev/null; then
                        docker build -t ${IMAGE_NAME}:${BUILD_NUMBER} .
                    else
                        echo "Using sudo for Docker commands..."
                        sudo docker build -t ${IMAGE_NAME}:${BUILD_NUMBER} .
                    fi
                    '''
                }
            }
        }

        stage('Push to Local Registry') {
            steps {
                script {
                    sh '''
                    if docker ps &> /dev/null; then
                        docker push ${IMAGE_NAME}:${BUILD_NUMBER}
                    else
                        echo "Using sudo for Docker push..."
                        sudo docker push ${IMAGE_NAME}:${BUILD_NUMBER}
                    fi
                    '''
                }
            }
        }

        stage('Update Manifests Repo') {
            steps {
                sshagent(['ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIYnfiifmrwtI2yM9PZZuvISxlnfu7K5dDq6SlyJEFxi pulkit.dubey@meesho.com']) {
                    sh '''
                    git clone ${DEPLOY_REPO}
                    cd tentomushi-deploy
                    sed -i "s|image: .*|image: ${IMAGE_NAME}:${BUILD_NUMBER}|" manifests/deployment.yaml
                    git config user.name "Jenkins"
                    git config user.email "jenkins@localhost"
                    git commit -am "Update image to ${IMAGE_NAME}:${BUILD_NUMBER}"
                    git push
                    '''
                }
            }
        }
    }
}
